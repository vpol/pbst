// Code generated by protoc-gen-gogo.
// source: meta.proto
// DO NOT EDIT!

/*
Package pbst is a generated protocol buffer package.

It is generated from these files:
	meta.proto

It has these top-level messages:
	MetaData
	Node
*/
package pbst

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import strings "strings"
import reflect "reflect"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Node_Type int32

const (
	Node_Node Node_Type = 0
	Node_Leaf Node_Type = 1
)

var Node_Type_name = map[int32]string{
	0: "Node",
	1: "Leaf",
}
var Node_Type_value = map[string]int32{
	"Node": 0,
	"Leaf": 1,
}

func (x Node_Type) String() string {
	return proto.EnumName(Node_Type_name, int32(x))
}
func (Node_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptorMeta, []int{1, 0} }

type MetaData struct {
	Root        int64   `protobuf:"varint,1,opt,name=root,proto3" json:"root,omitempty"`
	TSize       int64   `protobuf:"varint,3,opt,name=t_size,json=tSize,proto3" json:"t_size,omitempty"`
	LeafMax     int64   `protobuf:"varint,4,opt,name=leaf_max,json=leafMax,proto3" json:"leaf_max,omitempty"`
	NodeMax     int64   `protobuf:"varint,5,opt,name=node_max,json=nodeMax,proto3" json:"node_max,omitempty"`
	IndexCursor int64   `protobuf:"varint,7,opt,name=index_cursor,json=indexCursor,proto3" json:"index_cursor,omitempty"`
	Index       int64   `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	Nodes       []*Node `protobuf:"bytes,9,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *MetaData) Reset()                    { *m = MetaData{} }
func (*MetaData) ProtoMessage()               {}
func (*MetaData) Descriptor() ([]byte, []int) { return fileDescriptorMeta, []int{0} }

func (m *MetaData) GetRoot() int64 {
	if m != nil {
		return m.Root
	}
	return 0
}

func (m *MetaData) GetTSize() int64 {
	if m != nil {
		return m.TSize
	}
	return 0
}

func (m *MetaData) GetLeafMax() int64 {
	if m != nil {
		return m.LeafMax
	}
	return 0
}

func (m *MetaData) GetNodeMax() int64 {
	if m != nil {
		return m.NodeMax
	}
	return 0
}

func (m *MetaData) GetIndexCursor() int64 {
	if m != nil {
		return m.IndexCursor
	}
	return 0
}

func (m *MetaData) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *MetaData) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Node struct {
	Id       int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Keys     [][]byte  `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
	Children []int64   `protobuf:"varint,3,rep,packed,name=children" json:"children,omitempty"`
	Values   [][]byte  `protobuf:"bytes,4,rep,name=values" json:"values,omitempty"`
	Type     Node_Type `protobuf:"varint,5,opt,name=type,proto3,enum=pbst.Node_Type" json:"type,omitempty"`
	IsDirt   int32     `protobuf:"varint,6,opt,name=is_dirt,json=isDirt,proto3" json:"is_dirt,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptorMeta, []int{1} }

func (m *Node) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Node) GetKeys() [][]byte {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Node) GetChildren() []int64 {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *Node) GetValues() [][]byte {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Node) GetType() Node_Type {
	if m != nil {
		return m.Type
	}
	return Node_Node
}

func (m *Node) GetIsDirt() int32 {
	if m != nil {
		return m.IsDirt
	}
	return 0
}

func init() {
	proto.RegisterType((*MetaData)(nil), "pbst.meta_data")
	proto.RegisterType((*Node)(nil), "pbst.node")
	proto.RegisterEnum("pbst.Node_Type", Node_Type_name, Node_Type_value)
}
func (this *MetaData) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&MetaData{`,
		`Root:` + fmt.Sprintf("%v", this.Root) + `,`,
		`TSize:` + fmt.Sprintf("%v", this.TSize) + `,`,
		`LeafMax:` + fmt.Sprintf("%v", this.LeafMax) + `,`,
		`NodeMax:` + fmt.Sprintf("%v", this.NodeMax) + `,`,
		`IndexCursor:` + fmt.Sprintf("%v", this.IndexCursor) + `,`,
		`Index:` + fmt.Sprintf("%v", this.Index) + `,`,
		`Nodes:` + strings.Replace(fmt.Sprintf("%v", this.Nodes), "Node", "Node", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringMeta(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}

func init() { proto.RegisterFile("meta.proto", fileDescriptorMeta) }

var fileDescriptorMeta = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x91, 0xbf, 0x6e, 0xea, 0x30,
	0x18, 0xc5, 0x09, 0x71, 0x42, 0xf8, 0x40, 0x5c, 0x64, 0xdd, 0x3f, 0xbe, 0x0c, 0x28, 0x97, 0xbb,
	0x64, 0x69, 0x90, 0xe8, 0xd6, 0xb1, 0xed, 0xd8, 0x76, 0x48, 0xbb, 0x47, 0x0e, 0x36, 0x60, 0x15,
	0x70, 0x14, 0x3b, 0x15, 0x30, 0xf1, 0x58, 0x7d, 0x89, 0xee, 0x1d, 0xba, 0xb4, 0x4f, 0x52, 0xf9,
	0x0b, 0x6a, 0xb7, 0xf3, 0x3b, 0xbf, 0xd8, 0xc9, 0x51, 0x00, 0x36, 0xd2, 0xf2, 0xb4, 0xac, 0xb4,
	0xd5, 0x94, 0x94, 0x85, 0xb1, 0xa3, 0xb3, 0xa5, 0xb2, 0xab, 0xba, 0x48, 0xe7, 0x7a, 0x33, 0x5d,
	0xea, 0xa5, 0x9e, 0xa2, 0x2c, 0xea, 0x05, 0x12, 0x02, 0xa6, 0xe6, 0xd0, 0xe4, 0xc5, 0x83, 0xae,
	0xbb, 0x23, 0x17, 0xdc, 0x72, 0x4a, 0x81, 0x54, 0x5a, 0x5b, 0xe6, 0xc5, 0x5e, 0xe2, 0x67, 0x98,
	0xe9, 0x2f, 0x08, 0x6d, 0x6e, 0xd4, 0x41, 0x32, 0x1f, 0xdb, 0xc0, 0xde, 0xab, 0x83, 0xa4, 0x7f,
	0x21, 0x5a, 0x4b, 0xbe, 0xc8, 0x37, 0x7c, 0xc7, 0x08, 0x8a, 0x8e, 0xe3, 0x5b, 0xbe, 0x73, 0x6a,
	0xab, 0x85, 0x44, 0x15, 0x34, 0xca, 0xb1, 0x53, 0xff, 0xa0, 0xaf, 0xb6, 0x42, 0xee, 0xf2, 0x79,
	0x5d, 0x19, 0x5d, 0xb1, 0x0e, 0xea, 0x1e, 0x76, 0x57, 0x58, 0xd1, 0x9f, 0x10, 0x20, 0xb2, 0xa8,
	0x79, 0x1d, 0x02, 0x8d, 0x21, 0x70, 0x77, 0x18, 0xd6, 0x8d, 0xfd, 0xa4, 0x37, 0x83, 0xd4, 0x8d,
	0x4d, 0x5d, 0x95, 0x35, 0xe2, 0x82, 0x1c, 0xdf, 0x62, 0x6f, 0xf2, 0xec, 0x01, 0x71, 0x4c, 0x07,
	0xd0, 0x56, 0xe2, 0x34, 0xa4, 0xad, 0x84, 0x9b, 0xf6, 0x28, 0xf7, 0x86, 0xb5, 0x63, 0x3f, 0xe9,
	0x67, 0x98, 0xe9, 0x08, 0xa2, 0xf9, 0x4a, 0xad, 0x45, 0x25, 0xb7, 0xcc, 0x8f, 0xfd, 0xc4, 0xcf,
	0xbe, 0x98, 0xfe, 0x86, 0xf0, 0x89, 0xaf, 0x6b, 0x69, 0x18, 0xc1, 0x13, 0x27, 0xa2, 0xff, 0x81,
	0xd8, 0x7d, 0x29, 0x71, 0xd8, 0x60, 0xf6, 0xe3, 0xfb, 0x3b, 0xd2, 0x87, 0x7d, 0x29, 0x33, 0x94,
	0xf4, 0x0f, 0x74, 0x94, 0xc9, 0x85, 0xaa, 0x2c, 0x0b, 0x63, 0x2f, 0x09, 0xb2, 0x50, 0x99, 0x6b,
	0x55, 0xd9, 0xc9, 0x08, 0x88, 0x7b, 0x8c, 0x46, 0x40, 0xee, 0xb4, 0x90, 0xc3, 0x96, 0x4b, 0x37,
	0x92, 0x2f, 0x86, 0xde, 0x65, 0xf4, 0xfa, 0x3e, 0x6e, 0x1d, 0x3f, 0xc6, 0xad, 0x22, 0xc4, 0x7f,
	0x73, 0xfe, 0x19, 0x00, 0x00, 0xff, 0xff, 0x93, 0x89, 0x15, 0xf7, 0xde, 0x01, 0x00, 0x00,
}
